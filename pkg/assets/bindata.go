// Package assets Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// assets/monitoring/Sidekiq-grafana-dashboard-1.json.tpl
// assets/monitoring/apicast-grafana-dashboard-1.json.tpl
// assets/monitoring/backend-grafana-dashboard-1.json.tpl
// assets/monitoring/zync-grafana-dashboard-1.json.tpl
// assets/monitoring/zync-que-grafana-dashboard-1.json.tpl
package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _monitoringSidekiqGrafanaDashboard1JsonTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x8f\x23\x35\x13\xbe\xcf\xaf\xb0\x7c\x78\xf5\x22\x25\x90\x64\x77\x16\x88\xb4\x87\x99\x91\x06\x2d\x1a\x60\xb5\x83\xb8\xcc\x8c\xa2\xea\x76\xa5\xdb\xc4\xb1\x7b\xed\xea\x4c\x42\x94\xff\x8e\xec\xfe\x72\xc7\x81\xbd\x20\xc1\x25\xe9\x7a\x5c\x2e\xd7\xe7\x63\x1f\xaf\x18\xe3\xa0\xb5\x21\x20\x69\xb4\xe3\x4b\xe6\x21\xc6\xb8\x92\x8e\xf8\x92\x3d\x05\x89\xb5\x68\x58\xc9\x6a\xa9\xe8\x83\xe6\x4b\x36\x9f\x0c\xa8\x00\x02\x67\x6a\x9b\x23\x5f\x32\x3e\x9d\xb2\x1f\x2c\xac\x41\x03\x9b\x4e\x79\xa4\x86\x1a\x32\xe5\x55\xc8\xd6\x18\xe1\xa5\x14\x17\x50\x99\x1b\x7d\x67\x94\xb1\xde\xa6\x2d\x32\xf8\xff\x6c\xc2\x16\xf3\xf9\x84\x2d\xae\xaf\x27\x6c\xfe\x55\x6c\x5a\xc3\x36\x9c\x7d\x33\x84\xc3\xfe\xc7\x6e\x14\x5a\x72\xb1\x1e\x1d\xaa\xa0\x27\xc0\x95\x99\x01\x2b\x78\xbb\x76\x0a\xff\x2f\x57\x8c\x9d\xbc\x3a\x47\x21\xe9\xcc\x5b\x5e\x68\xa4\x0f\x82\x2f\x99\xae\x95\x6a\x10\x0b\x55\xf9\xab\x31\x8a\x64\xc5\x97\x6c\x16\x40\xe9\x55\xde\x86\x4f\x25\xf5\xc6\xe7\xf5\xe9\x25\x88\x15\x68\x54\xae\xcf\x6c\x97\x57\x0e\x4a\x82\x0b\xb1\x86\x22\x9c\x3a\x87\x79\x06\x01\x59\x83\x72\x7d\x6a\x82\xef\x0f\xa8\x0b\x2a\x7d\x19\x66\x23\x1c\x53\xf5\xb5\x54\x2a\xae\x17\x2f\xac\x14\x1f\xcd\x50\xee\xa6\x06\x7c\xc9\xbe\x8f\x12\xf5\xea\xb7\x2c\x22\x60\xdf\xc5\xd7\xca\x07\x2f\x77\xc9\xeb\x6d\x87\xd8\xfb\x6d\x5c\x61\x81\x5a\x8c\x4f\x82\x5d\x71\xee\x23\x63\x3c\xaf\xad\x45\x4d\x17\x56\xb6\xb0\xbf\x84\x4a\x7d\x01\x75\xa5\x79\x4d\x3b\x89\x0c\x81\xba\xa0\xbd\x03\x55\x0f\x09\x4b\x62\x51\x52\x87\xd5\xd8\x5a\x00\x5f\xa5\x68\x72\x1f\xa3\x51\x9d\x9b\x8e\xac\x95\xfa\x68\xa4\xa6\x9f\x4c\xe8\xee\x00\xf4\xad\xc8\x4d\xd5\xcf\xdc\x70\x62\x85\x36\x47\x4d\x50\x60\x52\xc5\xca\x9b\xb2\x20\x64\xed\x46\x19\x0e\x78\x5a\x74\x8b\x5a\xa0\xc5\x30\x3b\x6b\x65\x68\x38\xd8\xa1\x95\xe8\x7e\xd9\xa1\xb5\x52\xe0\x99\xd3\xae\x82\x1c\x2f\xf5\x96\x23\xc8\x37\xc9\x29\x8e\xb0\xaa\x50\x3c\x48\x9d\x3a\x4c\x60\x0b\x24\x17\xd1\x48\x4c\x24\x7e\xc2\xf6\x55\x70\xcf\x49\x81\x1b\xf9\x79\xf5\xbb\xc9\x56\xb6\xd6\x24\xb7\xb8\x72\x98\x1b\x2d\xdc\x2a\x37\xb5\xa6\xe3\xe7\x1a\x6b\x7c\xff\xcc\x33\xa9\x94\xd4\xc5\x33\x9f\xf8\x71\x0f\xbe\xbe\x7f\xe6\xc7\x23\xfb\xfa\xe7\x4e\x66\xa7\xd3\x33\x3f\x45\x13\xef\x07\xc0\xd8\x2d\xf8\xce\xe2\xad\x6d\x9f\x80\xb1\x8a\xd4\x84\x76\x07\xea\x1e\x72\x0a\x84\x33\x1f\x2d\x37\x6d\x7c\xdf\xdb\xb9\x6d\x1c\x19\xdb\xb0\xb8\x0e\xe4\xc0\x6f\x78\x0f\x9f\x26\xff\x54\xec\xb9\x95\x24\x73\x50\xff\x7e\xf0\x77\xad\x27\x7f\x11\xfd\x6d\x14\x7d\xfb\x35\xf4\x17\x95\x16\x5d\x69\x94\x38\xeb\x3b\xef\xdb\xbd\x35\xdb\x88\x5b\x7b\xfc\x13\x16\xed\xa4\x9c\x6d\x78\x2c\xe5\x9a\xd2\x1d\x14\x48\x9b\x3f\x36\xa9\x65\x3f\x9a\x8c\x7d\x6a\x52\xcb\x1e\x9b\xd4\xb2\x3b\x9f\xda\x61\x24\xa8\x27\xf0\x63\x4c\x25\x60\x51\xa4\x64\xe2\x8c\xa5\x33\x2a\x0c\x3c\xb2\xea\xae\x16\xa9\x85\xdc\x49\x51\x83\xe2\x09\xa5\x74\x3a\xe1\xde\x18\x1c\xd8\xc3\x5e\x9e\xf1\x71\x56\xe7\x9b\x66\x7c\xe2\xf0\x3c\xf1\xb5\x74\xe2\x03\xba\x70\x03\x9e\x69\x5f\x26\xc4\x9e\xf8\x9e\x5e\x12\x17\x0f\xb0\xc7\xbf\x99\xda\xa1\x9f\x5c\xe9\x33\x31\x6e\x15\xc8\x50\x25\x4e\xf8\x05\x53\xdc\x82\xc3\xa4\xb7\x1a\x6e\x4f\xd4\x1b\x72\x4f\xe0\x28\x98\x2f\x4e\xd8\x7f\xce\xcf\x64\x16\x0e\x69\xd1\x41\xc9\xe2\xd2\xb5\x16\xf0\x07\xdc\xf5\x4e\x8f\x1e\x2d\xfe\xb7\x79\x5f\xb8\xbc\xc4\x2d\xfc\x86\xd6\x49\x13\xde\x68\xdf\x35\x30\x1d\x54\xfb\xea\xb1\x9b\x90\x09\x4e\x50\x44\xef\x12\xc2\x6d\xa5\x80\x3c\xa5\x25\x6f\xc0\xe1\x49\x14\x3a\xae\x5f\x5f\x37\xe3\xca\xb5\x79\x9d\xbe\xeb\x7a\x99\x93\x69\x31\x3e\xda\x56\xc9\x7c\x13\x2e\xa3\x76\xb3\xc5\xb5\x27\x82\x55\x47\x3d\x71\xc3\xf1\xeb\x81\x9f\xf8\x7c\x16\x09\x6f\x62\x61\xbe\x1d\xbe\xaf\xa3\xef\x79\x2c\xbc\x99\xc5\x2b\xd1\xc4\x2d\xa2\xef\x79\xfb\x08\x7c\xe9\x62\xf0\x44\x39\xdc\xcf\x4f\x5f\x3c\x25\x36\xfc\x2e\x36\x1c\x9f\xb2\x78\x1b\x0b\x62\xf8\xfe\x56\xc4\xfe\x76\xbe\x8c\xd2\xf7\x87\x09\x17\x2c\x6f\x6b\xd7\x51\xdc\x39\xf9\x7f\xd3\x72\x5e\xa3\xb6\x1b\xda\xe0\xea\x74\xf5\x67\x00\x00\x00\xff\xff\x24\xa7\x41\x28\xed\x0b\x00\x00")

func monitoringSidekiqGrafanaDashboard1JsonTplBytes() ([]byte, error) {
	return bindataRead(
		_monitoringSidekiqGrafanaDashboard1JsonTpl,
		"monitoring/Sidekiq-grafana-dashboard-1.json.tpl",
	)
}

func monitoringSidekiqGrafanaDashboard1JsonTpl() (*asset, error) {
	bytes, err := monitoringSidekiqGrafanaDashboard1JsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring/Sidekiq-grafana-dashboard-1.json.tpl", size: 3053, mode: os.FileMode(420), modTime: time.Unix(1585752756, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringApicastGrafanaDashboard1JsonTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x5d\x6f\x22\x37\x14\x7d\xcf\xaf\xb0\xfc\x50\xb5\x12\xb4\xc0\x36\xdb\x16\x29\x0f\x69\xd4\x6c\x23\xa5\x24\xea\x46\x55\xa5\x10\xa1\xcb\xf8\x32\xe3\x62\xec\x91\x7d\x87\x40\x11\xff\xbd\xb2\xe7\xcb\xc3\x8c\xba\xcf\xfb\x02\xf6\xf1\x1d\xfb\x7e\x9c\x7b\xec\xd3\x15\x63\x1c\xb4\x36\x04\x24\x8d\x76\x7c\xce\x3c\xc4\x18\x57\xd2\x11\x9f\xb3\xd7\x30\x63\x15\x1a\x56\xd6\x85\x54\xf4\xa0\xf9\x9c\x4d\x47\x2d\x2a\x80\xc0\x99\xc2\x26\xc8\xe7\x8c\x8f\xc7\xec\x93\x85\x0d\x68\x60\xe3\x31\x8f\xcc\x50\xc3\x5a\x79\x13\xb2\x05\x46\x78\x26\xc5\x00\x2a\x13\xa3\xef\x8c\x32\xd6\xef\x69\xd3\x35\x7c\x3b\x19\xb1\xd9\x74\x3a\x62\xb3\xeb\xeb\x11\x9b\x7e\x17\x6f\xad\x61\x17\xce\xbe\x6d\xc3\x61\xdf\xb0\x5b\x85\x96\x5c\x6c\x47\xc7\x3c\xd8\x09\x70\xd9\xda\x80\x15\xbc\x5a\x3b\x87\xff\xb7\x2b\xc6\xce\xde\x9c\xa3\x90\x74\xe1\x2d\x4f\x35\xd2\x83\xe0\x73\xa6\x0b\xa5\x4a\xc4\x42\x9e\xbd\x18\xa3\x48\xe6\x7c\xce\x26\x01\x94\xde\x64\x16\x86\x4a\xea\xad\xcf\xeb\xeb\x5b\x98\xe6\xa0\x51\xb9\x26\xb3\x75\x5e\x39\x28\x09\x2e\xc4\x1a\x8a\x70\xae\x1d\xe6\x6b\x08\xc8\x06\x94\x6b\x52\x13\x7c\x7f\x44\x9d\x52\xe6\xcb\x30\xe9\xe0\xd8\x37\xdf\x48\xa5\xe2\x7a\xf1\xd4\x4a\xf1\x6c\xda\x72\x97\x35\xe0\x73\xf6\x4b\x94\xa8\x77\xff\xc9\x2c\x02\x0e\x75\x7c\xd5\xfc\xe8\xe7\x75\xf2\x9a\xbd\xdb\xd8\x4b\x22\x61\x8a\x5a\x74\x4f\x82\x7d\x7a\xe9\x23\x63\x3c\x29\xac\x45\x4d\x03\x2b\x3b\x38\x0c\xa1\x52\x0f\xa0\x2e\x33\xef\x7d\x26\x91\x21\x50\x03\xd6\x7b\x50\x45\x9b\xb0\x5e\x2c\x4a\xea\xb0\x1a\xef\x16\xc0\x77\x29\xca\xdc\xc7\x68\x54\xe7\x92\x91\x85\x52\xcf\x46\x6a\xfa\xc3\x04\x76\x07\xa0\xa1\x22\x37\x79\xd3\x73\xed\x89\x39\xda\x04\x35\x41\x8a\xbd\x2a\xe6\x7e\x2b\x0b\x42\x16\xae\x93\xe1\x80\xf7\x8b\x6e\x51\x0b\xb4\x18\x7a\x67\xa3\x0c\xb5\x07\x3b\xb4\x12\xdd\xd3\x1e\xad\x95\x02\x2f\x9c\x76\x39\x24\x38\xc4\x2d\x47\x90\x6c\x7b\xa7\x38\xc2\x3c\x47\xf1\x28\x75\xdf\x61\x02\x9b\x22\xb9\x48\x46\x62\x21\xf1\x1d\x76\xc8\x83\x7b\x3a\x95\xfa\xb0\xca\x88\xf2\x55\x62\xb4\xc6\x24\x24\xe6\xf4\x8f\x59\xdf\x2c\x39\xe4\x32\x01\x47\x63\x47\x90\x4a\x9d\x8e\x77\x46\x4b\x32\x56\xea\x74\xc9\x47\x8e\x80\xf0\x66\x59\xd6\x77\xc9\x47\x5e\x04\x42\x04\x37\x4b\x7e\x3a\xb1\xef\x17\xf5\x9c\x9d\xcf\x4b\x7e\x8e\x74\xc0\xb7\x85\xb1\x3b\xf0\x7c\xe3\x24\x77\xb8\x2a\xd3\xd2\x35\x91\x9a\xd0\xee\x03\x75\xf8\xf0\xca\x3d\x24\x14\x04\x6a\xda\x59\x2e\x69\x7f\xdf\x9c\xb0\xf8\xf4\xb0\xf8\x7b\xf5\xfb\xcb\xcb\xf3\xea\xee\x69\xb1\xf8\xed\xee\xe5\xe1\x69\xf1\xb9\xbb\xa5\xc5\x4d\xd0\x16\x7e\xcb\x1b\xf8\x5c\x8d\xda\x02\x51\x66\xd1\x65\x46\x89\x8b\xc2\xf9\x18\xee\xad\xd9\x45\xe2\xd4\xe0\x7f\x62\x5a\x51\xed\xe2\x83\xcf\x99\xdc\x50\xff\x0b\x0a\xaa\xf7\x25\xa7\x39\x35\xb2\x77\x8a\x1b\x10\x2c\x8a\x7e\x0b\x3a\x63\xe9\x42\x40\x42\xf7\xad\x6a\x41\x96\x5a\xc8\xbd\x14\x05\x28\xde\x6b\xc4\xda\x26\xa8\x6d\xeb\xc0\x01\x0e\xf2\x42\xc5\xd6\x45\xb2\x2d\x49\x17\xc7\xe4\xe5\xa2\x6a\x42\x1f\xf6\xc0\xbd\x71\x61\x3d\x2c\x23\x8d\x5c\xbc\xbe\xf5\x5c\x3c\xc2\x01\xff\x87\xeb\x2d\xd9\x5c\xe6\x33\xd1\x65\x0b\xac\x51\xf5\x9c\xf0\x0b\x26\xfd\x15\x1c\xf6\xe8\x55\x2a\x62\xcf\xbc\x94\xc4\x1e\x1c\x05\xd3\x12\x6b\xf4\x95\xf8\xd9\x6b\x80\x63\xbf\xe8\xa0\x64\x3a\x74\x19\x04\xfc\x11\xf7\x8d\xd3\x9d\xab\xde\xff\x96\xb7\xb2\x4b\x32\xdc\xc1\x5f\x68\x9d\x34\xe1\x65\xf3\x73\x09\xd3\x51\x55\x6f\x05\xbb\x0d\x99\xe0\x04\x69\x74\x9b\x13\xee\x72\x05\x24\x75\xda\x7f\x39\xb5\x0f\x89\xc0\xb8\x66\x7d\x53\xf6\x28\xd7\xe6\x7d\xfc\xb1\xe6\x32\x27\x53\x61\xbc\xf3\x59\x2e\x93\x6d\x90\xf0\xea\x63\x8b\x1b\xdf\xfd\xab\x5a\x7d\x62\xc2\xf1\xeb\x56\xbc\xf8\x74\x12\x4d\x3e\xc4\x93\xe9\xae\x1d\x5f\x47\xe3\x69\x3c\xf9\x30\x89\x57\xa2\x8e\x9b\x45\xe3\x69\xf5\x74\x7a\xab\x63\xf0\x2a\xda\xde\x6a\xaf\x5f\x3c\x25\xde\xf8\x63\xbc\x71\x7c\xca\xec\xc7\x78\x22\xda\xf1\x4f\x22\xf6\xb7\xf6\xa5\x93\xbe\x7f\x4d\xb8\x96\x78\x55\xbb\x5a\xd7\x2e\x6f\x86\x1f\x6e\xcb\x3b\xa6\x34\xdb\xb7\x34\xb8\x3a\x5f\xfd\x17\x00\x00\xff\xff\x3f\x81\x37\x92\x23\x0b\x00\x00")

func monitoringApicastGrafanaDashboard1JsonTplBytes() ([]byte, error) {
	return bindataRead(
		_monitoringApicastGrafanaDashboard1JsonTpl,
		"monitoring/apicast-grafana-dashboard-1.json.tpl",
	)
}

func monitoringApicastGrafanaDashboard1JsonTpl() (*asset, error) {
	bytes, err := monitoringApicastGrafanaDashboard1JsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring/apicast-grafana-dashboard-1.json.tpl", size: 2851, mode: os.FileMode(420), modTime: time.Unix(1585752756, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringBackendGrafanaDashboard1JsonTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x5d\x6f\xdb\x38\x16\x7d\xef\xaf\x10\xb8\xc0\x22\x03\x24\x5d\xdb\xb1\x9b\x0f\xa0\x0f\x49\xda\xcc\xce\xa0\xdb\x2d\xda\x62\x81\xdd\x24\xf0\xd0\xd2\xb5\xcd\x46\x26\x55\x92\x4a\xec\x06\xfe\xef\x0b\x92\x92\x4c\x7d\xd9\x49\x9a\x38\x96\xcb\xbe\xd4\x22\x69\xea\xf2\x88\xbc\xe7\x1c\x4a\x56\xee\x5e\x79\x1e\xc2\x94\x32\x89\x25\x61\x54\xa0\x63\x4f\x15\x79\x1e\x0a\x89\x90\xe8\xd8\xbb\xd0\x47\x5e\x52\xaa\x6b\x06\x31\x09\xe5\x1f\x14\x1d\x7b\xed\xdd\x45\x69\x80\x25\x16\x2c\xe6\x3e\xa0\x63\x0f\xed\xed\x79\xbf\x73\x3c\xc4\x14\x7b\x7b\x7b\xc8\x6a\x06\x14\x0f\x42\xd5\x44\xf2\x18\xac\xf2\x31\x09\x2a\x4a\x89\xcf\xe8\x19\x0b\x19\x57\x7d\xf2\xd1\x00\xef\xb4\x76\xbd\x4e\xbb\xbd\xeb\x75\x7a\xbd\x5d\xaf\xfd\x9b\xdd\x35\xc5\x13\x7d\xee\x93\xc5\x70\xbc\xbf\x7b\x27\x21\x70\x29\xec\x76\x72\x16\xe9\x76\x01\x16\xe3\x01\xc3\x3c\x40\x49\xdd\x5c\xff\x7f\xf5\xca\xf3\xe6\xaa\x39\x82\x80\xc8\x42\xb4\x68\x44\x41\xfe\x11\xa0\x63\x8f\xc6\x61\x68\x4a\x38\x8e\xc6\x5f\x19\x0b\x25\x89\xd0\xb1\xd7\xd2\x85\x24\x48\xe1\x41\x21\xa1\xd7\x0a\xd7\x8b\x2b\x7d\x18\x61\x0a\xa1\xc8\x90\x4d\x71\x45\x38\x24\x58\xe8\xb1\xea\x8b\x30\x4f\x03\x46\x03\xac\x4b\x86\x38\x14\x19\x34\x3a\xf6\x0f\x40\x47\x72\xac\xce\xd3\xca\x95\x43\xb9\xf9\x90\x84\xa1\x7d\xbd\xd0\x88\x93\xe0\x13\x5b\x5c\x6e\x73\x0d\xd0\xb1\x77\x68\x01\x75\xab\xbe\xd2\xb1\x0a\xa6\xe9\xf8\x92\xe3\x99\x3a\x4e\xc1\xcb\xfa\x36\x63\xef\x66\xc7\x21\x8c\x80\x06\xf9\x53\xe1\x9b\x51\x31\x48\xcf\x43\x7e\xcc\x39\x50\x59\x51\x33\xc1\xd3\xaa\x52\x42\x2b\x4a\xc5\x98\xdd\x96\xa7\x92\x64\x12\x87\x15\xad\x6f\x70\x18\x2f\x10\x2b\x0d\x26\x24\x54\xd7\xda\xbd\xe9\xc2\x5b\x12\x18\xf0\xed\x52\xeb\x42\x9b\x29\x19\x87\xe1\x27\x46\xa8\xfc\x17\xd3\xd3\x5b\x17\x64\x73\x11\xb1\x28\x5b\x74\x8b\x33\x46\xc0\x7d\xa0\x12\x8f\xa0\x74\x19\x23\xd5\x15\xc7\x01\x89\xd5\x77\x3a\xf9\xf2\xf2\x55\xe7\x40\x03\xe0\xa0\x17\xcf\x30\x64\x72\x71\x62\x01\x9c\x80\xf8\xf7\x0d\x70\x4e\x02\x28\x04\x2d\x22\xec\x43\xd5\xe4\x12\x12\xfb\xd7\xa5\xb3\x08\x09\x51\x04\xc1\x07\x42\xcb\x01\x4b\xcc\x47\x20\x85\x95\x47\xec\x4c\xa2\x96\xd8\x34\xd2\xe1\x89\x78\xb2\xc3\xb1\x84\x1d\x1c\x11\xc1\x28\x96\x8c\xf7\x55\x06\x02\x0a\xbc\xcf\x41\x44\x8c\x0a\xe8\xfb\x2c\x00\x71\xf7\x8d\x0d\xde\x5e\xa2\x01\xf6\xaf\x81\x06\x7b\x69\xab\xbd\x09\xa3\x44\x32\x4e\xe8\xe8\x12\xed\xaa\x5c\xa0\xc7\xf1\xf6\x12\xdd\xdd\x79\xaf\x3f\xa6\xc7\xde\x7c\x7e\x89\x76\x39\x7c\x8f\x41\xc8\xbe\x4a\x05\x6f\x2f\x11\x8e\xe5\x98\x71\xf2\x03\x2e\xd1\xfc\xa2\x3d\xb9\xfa\xcd\xce\x2b\x6a\xf9\x30\x3e\xc1\x6a\x5a\x22\x49\x26\xd0\x37\xe8\xe5\x9b\x10\x2a\x81\xdf\xe0\xf0\x1c\xfb\x52\xa7\xab\x76\xae\xda\xac\x81\xf3\xac\x9f\xec\x8c\xf9\x5e\x38\x0c\x75\x72\x41\x27\x28\x2b\x9e\xef\x6e\x3a\x74\x1c\xa2\xb5\x02\xc7\x21\xaa\x81\xed\xb4\x29\xb0\x71\x88\x18\x97\x6b\x43\xcd\x9c\xae\x06\xb4\xb3\xa6\x80\x96\x2d\x9a\x3e\x53\x1f\xd7\xbf\x58\xcd\x79\x6b\x60\x7c\xd7\x24\x18\x39\x44\x2f\x00\x62\x76\xd6\x1a\x08\xdf\x5b\x10\x26\x9f\x16\xb4\xa4\xbe\x2e\xc6\x2c\x0c\x0a\x74\xa5\x02\x3c\xe7\x6c\x62\x69\xb2\xac\xfc\x33\x8c\x12\x82\x2d\x7c\xe1\xcb\x98\x0c\x65\xf9\x1b\x52\x8b\x3d\xf4\x21\x41\xd9\x4b\x90\x13\x5e\x04\xdc\x13\xe0\x33\x1a\x78\x3b\x83\x59\x5a\xee\x29\x44\x17\xc8\x21\x99\xa9\xc0\x3b\x5b\x8e\x60\x0e\x41\x59\x90\x08\xb5\x22\xf3\x7a\x4a\x6b\x91\x7e\xaa\x4f\x09\x0d\xc8\x0d\x09\x62\x1c\xa2\x92\x2c\x49\xdb\x68\xf1\xb9\x08\x60\x8a\xa7\xa4\x20\xea\x06\xb1\x7f\x6d\x28\xd8\x1e\xab\x12\x4f\x89\x24\x51\x70\x54\xc8\xe8\x42\xeb\x6a\x51\x95\x89\xa7\x8b\xab\x52\x88\x33\x3c\x85\x25\xcc\xbf\x98\x61\x62\x5c\xca\x4d\x21\x1e\x40\x58\x0a\x42\x55\xb0\xd1\x29\x16\x50\x9a\x6d\x46\x1f\x96\x9a\x1b\x81\x58\x2a\xb6\x06\xb3\x72\xcd\x6e\x5c\x9c\xa5\x85\x31\x2b\x5f\x74\x1c\x92\x51\x95\x34\xd6\xe5\x1f\xe0\x26\x0b\x3a\xe7\x7c\x12\x08\x2c\x4b\x02\x7a\x8a\x5a\x1d\xab\x15\x40\x52\xd1\x7a\x61\xc5\x6a\x63\xa6\x32\x9d\x9a\x19\xd8\xe4\x85\x7c\x95\xb6\x40\x1c\x4f\x8a\x1d\x98\x7f\xed\x56\xab\x50\x76\xb5\x5b\xfc\x7a\x36\xf7\x25\xca\x55\xcd\xf3\x2d\x11\x8b\x80\xd7\x85\x90\xf6\x81\x69\xb0\xbc\x93\xef\x31\xf0\xd9\x03\x07\x81\xce\x50\x31\x68\xcf\x43\xbd\x49\x55\x29\x65\xb7\xa8\x38\xe2\xa5\x01\x71\x08\x62\x1f\x56\xe0\x5a\x0f\x9a\x88\x27\xcb\x07\x9c\x36\x34\x03\xb7\xea\xe6\xd9\xe7\x2b\xdb\xcf\x4f\xc1\x8f\xd5\x84\x78\xcf\x39\xe3\x5f\x24\x96\x06\x57\x35\x75\x08\x1d\xd9\x89\x65\x68\x6c\x7c\x0e\x07\x34\xd4\xa9\x94\xfa\x0a\x63\xd4\xce\x55\x8d\x31\x0d\x42\x28\x30\x4b\xe6\xf2\xad\x1c\x6d\xf8\xd2\xd3\x7c\x69\x67\x6a\x33\x7f\xed\xef\xb2\x77\x58\xe2\x2c\x48\xca\xfa\x01\x96\x38\xdf\x42\x92\x21\xf1\xb3\xcd\x90\x8a\xbc\xd6\x14\xa3\x9e\x2b\x58\xe6\xd4\x3b\x4f\xea\xd4\xc7\x24\x80\xf7\x93\x48\xce\xaa\xf7\x78\xfe\x07\x9c\x95\x6b\x9c\xbd\x77\xf6\xfe\x49\x05\xaf\x88\x74\x6f\x6f\x2f\x51\x67\x3a\x5d\x9b\xc6\xed\x4c\xa7\x0d\xf4\xf3\x0b\xac\xba\xad\xfd\xb5\x61\xd5\x6d\xed\x37\xd0\xc4\xdb\x58\x75\x1f\x8f\x55\xb2\xdb\x5d\x48\x56\x8f\x01\xb1\xdb\x40\x37\x6a\x83\x78\xb4\xc6\x09\x77\x74\x0f\xdb\xb9\xb9\x58\xf5\xd6\x98\xc8\x7a\xb5\x89\xec\xec\xfe\x16\xbd\x1a\x49\x5f\x29\xa7\x94\x2f\x7d\x4e\x24\xf1\x71\x58\x18\x8f\x11\x41\x79\x86\x4f\x78\xb9\xaa\x9c\x45\x89\x1d\xc8\x95\x6a\xe6\xd7\x0c\xd7\x5a\x16\xf2\xb3\xee\x1e\xd4\x28\x53\xb7\x63\xe0\x76\x0c\xb6\x74\xc7\xa0\x19\xde\xa8\x78\x13\xf3\xb0\xc6\x1a\xbd\x79\x52\x6b\xe4\x5c\xce\x76\xbb\x9c\xd5\xc2\x40\x65\x4e\xd1\x37\x24\x20\xfa\x26\xd1\xae\xe3\x7e\x66\x9d\x5e\x18\x03\x96\x13\x1c\x55\x6b\x05\xd5\x60\x95\x8a\x68\x2d\x95\x11\x77\x77\x7f\xdd\xdd\x85\x30\x9f\xff\x35\x9f\xdf\xc3\x18\xad\xd0\x13\xcf\x4a\xda\x27\x29\x64\x0b\xd6\xd6\x17\xcb\xdb\x51\xb4\xad\x3e\x7a\xe6\x72\xb9\xed\x7e\x47\xde\xdb\x49\xde\x3e\xe6\x41\xa1\x63\x55\xf4\x09\x07\x01\xa1\xa3\xf2\x1c\x51\x95\x9f\x59\x4c\x83\x42\xe7\x59\xa4\x7e\xf2\xe4\x56\xa1\xc3\xec\x81\xae\xbf\x9d\x9f\xbc\x7b\xdf\x39\xb1\x67\xa3\xfe\xca\x17\x1f\x9b\x45\x29\xbe\xe7\xf7\x6f\x93\xda\x31\x4c\x92\x15\x23\x81\x47\x2c\xc4\x12\x4e\xf5\xc4\xb4\x9a\xc2\x34\x62\xd4\xd0\x70\xeb\x75\xaf\x62\x1d\xb0\x08\xfb\x44\xce\xca\x6b\x2d\xc0\x12\x2f\x52\x98\x14\xe9\x8a\x7a\x02\xd9\x51\xda\x92\x2d\xeb\x8e\x34\x23\xe7\xd8\x34\xdd\x38\x3d\xcd\x16\x77\x9e\xa1\xc6\x64\x34\x0e\xc9\x68\x2c\xcf\x92\x4b\x98\x23\x7a\x23\x65\x0e\x96\x4a\x99\x64\xea\xd5\xca\x87\xa2\x26\xa8\x24\x7d\x0e\x37\xc0\x05\xfc\xb7\x2e\xcc\x5f\x99\x48\xdb\x93\x17\xa6\xd2\x25\x94\xf9\x58\x66\x4c\xe0\x5f\xcd\x88\x55\x5c\xa2\x4a\xff\x49\x84\x64\x23\x8e\x27\xb5\x53\x2f\x25\xbe\x22\xbe\x68\x7a\x52\xca\x82\xe5\xf4\xb9\xe8\x67\x6a\xe6\xe4\xc7\x78\x32\xd0\x52\x32\x37\xd4\xa4\xf2\x0b\xf9\x51\x64\x42\x34\x2b\x9f\x26\x00\x9f\x4c\x70\x58\x41\xb1\xf5\xdc\x51\x4d\x10\x95\xf4\x50\x49\x0e\x75\x18\x46\x21\x91\xd9\x0c\xaa\xcc\xc1\x33\x33\xb6\xd3\x24\x4f\xab\x19\xcd\x50\xb1\xb6\x1a\x96\x59\x09\x96\x4a\xda\x68\xaa\xe7\x6b\xbf\x29\x81\xa5\x33\x65\xc7\x3d\xb9\xea\x4c\x5f\x43\xb9\xca\x7a\x12\xd3\x59\xbe\xfb\x10\x1b\x87\xc8\x19\x3e\x67\xf8\x36\x29\xce\xd2\x92\xd8\x22\xc3\xd7\x3b\x38\xea\x9e\x77\x7e\x61\xc3\x57\x21\x3a\x9e\xcb\xf1\x75\x7a\xce\xf1\xbd\x1c\x8b\x36\xdb\xef\x55\xd1\xa2\x73\x7b\xce\xed\x35\xd7\xed\x75\xba\x25\xb0\x4c\x96\x6c\x39\xb7\xe7\xdc\x5e\xf3\x78\x2a\xff\x03\x32\x67\xf6\x56\xb1\xda\x67\x8d\x97\xf3\x7a\xce\xeb\x6d\x52\x9c\xa5\x15\xb1\x45\x5e\xef\xbc\xd3\x3d\xea\x9d\xfd\xc2\x5e\xaf\x42\x72\x3c\x9b\xd7\xdb\x77\x5e\xef\xc5\x38\xb4\xb9\x56\xaf\x86\x14\x9d\xd3\x73\x4e\xaf\xb9\x4e\x6f\xbf\x53\x02\xcb\xe4\xc8\xa7\xfd\x9d\x9b\x73\x7a\xce\xe9\xad\xf7\x19\x94\xfc\x0b\x1b\x9c\xe5\xbb\xff\x83\x2b\x3b\x1a\xb9\xdf\x9c\xfb\x73\xee\x6f\x93\xe2\x2c\x2d\x8e\x6d\x72\x7f\xe7\x47\x87\xfb\xad\x5f\xd8\xfd\x55\xc8\x90\x67\x73\x7f\x6d\xe7\xfe\x5e\x9e\x57\x9b\x6b\x03\x57\x13\xa5\x73\x84\xce\x11\x36\xd7\x11\x76\xeb\xde\x7c\x72\xe8\x1c\xa1\x73\x84\xcd\x64\xae\xd2\x0b\xfc\x9c\x1f\xbc\xef\x83\x2d\xce\x0d\x3a\x37\xb8\x81\x71\x96\x96\xc6\x16\xb9\xc1\xd3\xc3\x83\x83\x77\x47\xbf\xb0\x1b\xac\x90\x20\xcf\xf6\x4b\xbf\x23\xe7\x06\x5f\x9a\x53\x9b\xed\x05\x97\x91\xa4\x73\x82\xce\x09\x6e\x8c\x13\x3c\x7a\xb0\x13\xac\x79\xd1\x8b\xbb\x35\xe8\x8c\xe0\xe3\x49\xeb\x96\xf1\x6b\xe0\xfd\x6f\x6c\xd0\xf7\x59\x4c\x8b\xf4\x64\xaa\x1f\x44\x4e\x09\x29\x99\xe7\x33\xfe\x64\x83\x4b\x34\xf7\x96\x32\xd2\xca\x17\xbf\xdd\xc7\xe9\x2d\xa5\xa4\xe4\x59\x91\x6f\x6c\x50\xf9\x26\x33\xaf\x96\x9c\x6a\xf4\xf7\xda\xc1\xfc\xc8\x24\x19\xce\x36\x03\x4c\x13\xcb\x3d\xc1\x3c\xdd\x10\xff\xfc\x67\x4d\xb4\xce\x1e\x3b\x7b\xfc\xfc\x71\x96\x66\xfe\xb6\xbf\xc4\x6e\xa5\xb8\x29\x9b\xcc\x1a\x75\xe3\xb6\xb9\x9d\xba\xb9\xbf\xba\x59\xb7\xb0\x79\x34\x0b\x3f\x5c\xb8\xfc\xbc\x5a\x59\xb7\x50\x79\x6e\x70\x2c\x21\xb2\xe1\xea\xe3\xab\x4a\x1a\x89\x62\xe2\xcc\x07\x21\xc0\x49\x10\x27\x41\x9c\x04\xf1\x90\x8f\xfd\x31\x7c\x25\x13\x60\x71\x69\xfd\x6c\xce\xde\x4b\xef\xa0\x5a\x9d\x2c\xdf\xae\x76\xea\xe4\x51\xea\x24\x8c\x47\x84\xfe\x07\xb8\x20\x4c\x8d\x1c\xbd\x79\xdd\x79\xbd\xf8\x53\x01\x5b\xac\x5e\x96\x6c\x27\xf0\x98\x26\xb4\xb9\xe4\x5e\xc2\xd3\x68\x9a\x86\xdf\x3d\x58\xfb\xcf\x72\x35\xad\x27\xd7\xe7\x01\xf7\x18\x1c\xbd\x57\xac\x84\x8d\xa3\x4d\x47\xef\x2f\x7f\x03\x7e\xcb\x5e\xbc\xf4\xf0\xbd\x91\x0a\xf5\xf1\x5c\x37\xe0\x97\xbf\x3f\x72\xb3\xef\xbf\x3b\xba\x7c\x04\x5d\xfe\xec\xef\x6f\x1f\xc9\x7e\xee\x0e\xbb\xbb\xc3\x9e\x14\x36\xc3\x01\xbe\xa9\x79\xe3\x6e\xdb\xbd\x83\xc9\x59\x40\x6f\x0b\x2c\xa0\xbd\x73\xdb\x70\x4e\x5b\x9f\x05\xb4\xef\x85\x3b\x0b\x58\x91\x6c\x9c\x05\x74\x16\xf0\x09\x2c\xe0\xa0\x3b\x1c\xb6\x9e\xe4\x17\xb9\xbf\x73\x00\xda\x40\x0f\x58\xa1\x3f\x9e\xcb\x03\x2e\xff\xc3\x71\xce\x03\x6e\x1d\x5f\x3e\xda\x03\xfe\x1c\xfd\x39\x0f\xb8\x4d\x1e\xf0\x55\x32\xa5\xd4\xa4\x53\xfa\x4b\xcf\xec\x96\x49\x86\x48\xa8\x54\x8c\x17\x82\xde\xfc\x7a\x15\x09\x39\x33\x13\x29\xc0\xfc\xda\xb4\x94\x78\xb4\x48\x20\x48\xc2\x24\x0a\xb1\x34\xac\x62\xd0\x46\x21\x11\x32\x55\x16\x73\xd3\x8a\xe8\x34\x9f\xd4\x0f\xcd\x54\x46\x94\xdd\xee\x75\xba\xa9\x08\x42\x92\x25\x85\x28\xf7\xbd\x88\xf8\xd7\xb0\xe0\x9e\x34\xfa\x7e\xba\x08\xed\x1c\x84\x7a\x56\x6e\x4f\xc7\xa6\x0f\xf6\xed\x03\x6b\x3d\xa3\x9e\xf5\xb9\x6d\x1f\xec\xb7\xec\x1a\x4b\xaa\x75\xac\xcf\xed\xc0\xac\xdb\xab\x74\x0c\x2a\x9f\x2d\x12\xea\xc5\xca\xb3\xd8\x1d\xbf\xb1\x3b\xb6\xcf\xb2\x00\x49\x1d\x58\x0f\x26\x1c\x04\x76\xbc\x69\x2c\x39\xf8\x7e\x30\xed\x76\x50\x72\xf1\xd2\xc4\x50\x4c\x9b\xff\x38\xc9\x52\xb4\x69\x79\xb3\x98\x0a\x9d\x56\xef\xf0\xd5\xfc\xd5\xff\x03\x00\x00\xff\xff\xcc\x5a\xd3\x4f\xce\x93\x00\x00")

func monitoringBackendGrafanaDashboard1JsonTplBytes() ([]byte, error) {
	return bindataRead(
		_monitoringBackendGrafanaDashboard1JsonTpl,
		"monitoring/backend-grafana-dashboard-1.json.tpl",
	)
}

func monitoringBackendGrafanaDashboard1JsonTpl() (*asset, error) {
	bytes, err := monitoringBackendGrafanaDashboard1JsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring/backend-grafana-dashboard-1.json.tpl", size: 37838, mode: os.FileMode(420), modTime: time.Unix(1585763543, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringZyncGrafanaDashboard1JsonTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x8f\x23\x35\x10\xbd\xcf\xaf\xb0\x7c\x40\x20\x25\x90\x64\x99\x05\x22\xed\x61\x18\x69\xd0\x4a\xc3\xb2\x5a\x10\x12\x3b\x33\x8a\x2a\xed\x4a\xb7\x89\x63\xb7\xec\xea\x4c\xb2\x51\xfe\x3b\xb2\xfb\xcb\xdd\x6e\xc1\x99\x4b\x62\x3f\x57\xdb\xf5\xf1\xea\xd9\x97\x1b\xc6\x38\x68\x6d\x08\x48\x1a\xed\xf8\x9a\x79\x88\x31\xae\xa4\x23\xbe\x66\x4f\x61\xc6\x1a\x34\xac\x6c\x2b\xa9\xe8\xbd\xe6\x6b\xb6\x9c\xf5\xa8\x00\x02\x67\x2a\x9b\x21\x5f\x33\x3e\x9f\xb3\x5f\x2c\xec\x40\x03\x9b\xcf\x79\x64\x86\x1a\xb6\xca\x9b\x90\xad\x30\xc2\x0b\x29\x26\x50\x99\x19\x7d\x6f\x94\xb1\x7e\x4f\x9b\x6f\xe1\xeb\xc5\x8c\xad\x96\xcb\x19\x5b\xdd\xde\xce\xd8\xf2\x9b\x78\x6b\x0d\x87\x70\xf6\x5d\x1f\x0e\xfb\x8a\xdd\x29\xb4\xe4\x62\x3b\x3a\x97\xc1\x4e\x80\x2b\xb6\x06\xac\xe0\xcd\xda\x35\xfc\xbf\xdc\x30\x76\xf5\xe6\x1c\x85\xa4\x91\xb7\x3c\xd7\x48\xef\x05\x5f\x33\x5d\x29\x55\x23\x16\xca\xe2\x0f\x63\x14\xc9\x92\xaf\xd9\x22\x80\xd2\x9b\xac\xc2\x50\x49\xbd\xf7\x79\x7d\x7a\x09\xd3\x12\x34\x2a\xd7\x65\xb6\xcd\x2b\x07\x25\xc1\x85\x58\x43\x11\xae\xad\xc3\x7c\x0b\x01\xd9\x81\x72\x5d\x6a\x82\xef\x8f\xa8\x73\x2a\x7c\x19\x16\x03\x1c\x53\xf3\x9d\x54\x2a\xae\x17\xcf\xad\x14\x1f\x4d\x5f\xee\xba\x06\x7c\xcd\x7e\x8a\x12\xf5\xea\x3f\x59\x45\xc0\xa9\x8d\xaf\x99\x9f\xfd\xbc\x4d\x5e\xb7\x77\x1f\x7b\x4d\x24\xcc\x51\x8b\xe1\x49\x70\xcc\xc7\x3e\x32\xc6\xb3\xca\x5a\xd4\x34\xb1\x72\x80\xd3\x14\x2a\xf5\x04\xea\x0a\xf3\x9a\x32\x89\x0c\x81\x9a\xb0\x3e\x82\xaa\xfa\x84\x25\xb1\x28\xa9\xc3\x6a\xbc\x5b\x00\x5f\xa5\xa8\x73\x1f\xa3\x51\x9d\x6b\x46\x56\x4a\x7d\x34\x52\xd3\xaf\x26\xb0\x3b\x00\x1d\x15\xb9\x29\xbb\x9e\xeb\x4f\x2c\xd1\x66\xa8\x09\x72\x4c\xaa\x58\xfa\xad\x2c\x08\x59\xb9\x41\x86\x03\x9e\x16\xdd\xa2\x16\x68\x31\xf4\xce\x4e\x19\xea\x0f\x76\x68\x25\xba\xdf\x8e\x68\xad\x14\x38\x72\xda\x95\x90\xe1\x14\xb7\x1c\x41\xb6\x4f\x4e\x71\x84\x65\x89\xe2\x51\xea\xd4\x61\x02\x9b\x23\xb9\x48\x46\x62\x21\xf1\x1d\x76\x2a\xeb\xd6\x06\xa9\xdc\x26\x33\x5a\x63\xe6\x73\xb2\x29\x8d\x51\xd1\xdc\x5d\xfe\x36\xdb\x77\xcf\xfc\xcb\x59\x67\xf3\x83\xd1\x92\x8c\x95\x3a\x7f\xe6\x33\xdf\xf4\xc1\xe3\x77\xcf\xfc\x72\x61\xdf\x7e\x68\xe7\xec\x7a\x7d\xe6\xd7\xa8\xef\x7d\x1b\x18\x7b\x00\xcf\x2f\x4e\xf2\x80\x9b\x3a\x0d\x43\x13\xa9\x09\xed\x31\x50\x85\x4f\xaf\x3c\x40\x46\x41\x90\x96\x83\xe5\x9a\xe6\x0f\xdd\x09\x9f\x7c\x48\x2c\x0a\x61\xb8\x9b\xc5\x5d\x90\x11\x7e\xc7\x3b\xf8\xda\x8c\xfa\x5a\x50\x61\xd1\x15\x46\x89\x51\x8d\xbc\xfb\x0f\xd6\x1c\x22\x1d\xea\xf0\x4f\x98\x37\xac\x1a\x7d\xf0\x7b\x21\x77\x94\x7e\x41\x41\xe0\xf8\xe7\xbf\x3e\xdc\xb3\xfb\x09\x77\x39\x75\xda\x76\x89\xbb\x0c\x2c\x8a\xb4\xcf\x9c\xb1\x34\x52\x89\xd0\x62\x9b\x56\x75\xa5\x16\xf2\x28\x45\x05\x8a\x27\xdd\xd6\xda\x04\x49\xed\x1d\x38\xc1\x49\x8e\xa4\x6a\x5b\x65\xfb\x9a\x59\x71\x34\x5e\x13\x9a\x4e\xf3\x01\x4f\x5c\x0e\x23\xeb\x69\xad\xe8\x34\xe1\xe9\x25\x71\xf1\x0c\x27\xfc\x17\x42\xf7\x0c\x73\x85\xcf\xc4\x90\x22\xb0\x45\x95\x38\xe1\x17\x4c\xfe\x33\x38\x4c\x38\x55\xcb\x5e\x62\x5e\xeb\x5e\x02\x47\xc1\xf4\x94\x9a\xfd\x4f\xfc\x4c\xa8\x7f\x4e\x8b\x0e\x4a\xe6\x53\x8a\x1f\xf0\x47\x3c\x76\x4e\x0f\xee\x73\xff\x5b\x5f\xbd\x2e\x2b\xf0\x00\x7f\xa2\x75\xd2\x84\xe7\xcb\x8f\x35\x4c\x67\xd5\x3c\x08\xec\x3e\x64\x82\x13\xe4\xd1\x95\x4d\x78\x28\x15\x90\xd4\x79\xfa\x3c\xea\x5f\x0b\x81\x71\xdd\xfa\xae\xee\x4e\xae\xcd\xeb\xfc\x6d\xcb\x65\x4e\xa6\xc1\xf8\xe0\xb3\x52\x66\xfb\xa0\xd3\xcd\xc7\x16\x77\xbe\xef\x37\xad\xe4\xc4\x84\xe3\xb7\x51\x6b\x2e\x17\xd1\xe4\x4d\x3c\x59\x1e\xfa\xf1\x6d\x34\x5e\xc6\x93\x37\x8b\x78\x25\xea\xb8\x55\x34\x5e\x36\xef\xa3\x97\x36\x06\x2f\x9d\xfd\xd5\xf5\xf4\x9f\xa7\xc4\x1b\xbf\x8d\x37\x8e\x4f\x59\x7d\x1f\x4f\x44\x3f\xfe\x41\xc4\xfe\xb6\xbe\x0c\xd2\xf7\xc5\x84\xbb\x87\x37\xb5\x6b\x15\x6d\x7c\x1d\x7c\xf7\xf9\xac\xb3\xda\xe6\xd8\x73\xe0\xe6\x7a\xf3\x4f\x00\x00\x00\xff\xff\x68\x5d\x11\x82\x05\x0b\x00\x00")

func monitoringZyncGrafanaDashboard1JsonTplBytes() ([]byte, error) {
	return bindataRead(
		_monitoringZyncGrafanaDashboard1JsonTpl,
		"monitoring/zync-grafana-dashboard-1.json.tpl",
	)
}

func monitoringZyncGrafanaDashboard1JsonTpl() (*asset, error) {
	bytes, err := monitoringZyncGrafanaDashboard1JsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring/zync-grafana-dashboard-1.json.tpl", size: 2821, mode: os.FileMode(420), modTime: time.Unix(1585752756, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringZyncQueGrafanaDashboard1JsonTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x5b\x6f\x23\x35\x14\x7e\xef\xaf\xb0\xce\x03\x02\x29\x81\x24\x4b\x17\x88\xb4\x0f\xa5\xa2\x68\xa5\xb2\xec\x2e\x17\x89\x6d\xab\xe8\x64\x7c\x32\x63\xe2\xd8\x83\xed\x49\x93\x46\xf9\xef\xc8\x9e\x9b\x27\x1e\xc1\xf3\xbe\x24\xf6\xe7\x33\xf6\xb9\x7c\xe7\xb3\x4f\x57\x8c\x01\x2a\xa5\x1d\x3a\xa1\x95\x85\x25\xf3\x10\x63\x20\x85\x75\xb0\x64\x0f\x61\xc6\x1a\x34\xac\xac\x2b\x21\xdd\x5b\x05\x4b\x36\x9f\xf4\x28\x47\x87\x56\x57\x26\x23\x58\x32\x98\x4e\xd9\xcf\x06\x37\xa8\x90\x4d\xa7\x10\x99\x91\xc2\xb5\xf4\x26\xce\x54\x14\xe1\x85\xe0\x23\xa8\xc8\xb4\xba\xd5\x52\x1b\xbf\xa7\xc9\xd7\xf8\xe5\x6c\xc2\x16\xf3\xf9\x84\x2d\xae\xaf\x27\x6c\xfe\x55\xbc\xb5\xc2\x5d\x38\xfb\xa6\x0f\x87\x7d\xc1\x6e\x24\x19\x67\x63\x3b\x77\x2c\x83\x1d\x47\x5b\xac\x35\x1a\x0e\xcd\xda\x39\xfc\x3f\x5d\x31\x76\xf6\xe6\x40\x5c\xb8\x0b\x6f\x21\x57\xe4\xde\x72\x58\x32\x55\x49\x59\x23\x06\xcb\xe2\x77\xad\xa5\x13\x25\x2c\xd9\x2c\x80\xc2\x9b\x2c\xc2\x50\x0a\xb5\xf5\x79\x7d\x78\x0a\xd3\x12\x15\x49\xdb\x65\xb6\xcd\x2b\xa0\x14\x68\x43\xac\xa1\x08\xe7\xd6\x61\x58\x63\x40\x36\x28\x6d\x97\x9a\xe0\xfb\x3d\xa9\xdc\x15\xbe\x0c\xb3\x01\x4e\xa9\xf9\x46\x48\x19\xd7\x0b\x72\x23\xf8\x7b\xdd\x97\xbb\xae\x01\x2c\xd9\x0f\x51\xa2\x9e\xfd\x27\x8b\x08\x38\xb4\xf1\x35\xf3\xa3\x9f\xb7\xc9\xeb\xf6\xee\x63\xaf\x89\x44\x39\x29\x3e\x3c\x09\xf7\xf9\xa5\x8f\x8c\x41\x56\x19\x43\xca\x8d\xac\xec\xf0\x30\x86\x0a\x35\x82\xda\x42\x3f\xa7\x4c\x72\xda\xa1\x1c\xb1\xde\xa3\xac\xfa\x84\x25\xb1\x48\xa1\xc2\x6a\xbc\x5b\x00\x9f\x05\xaf\x73\x1f\xa3\x51\x9d\x6b\x46\x56\x52\xbe\xd7\x42\xb9\x5f\x74\x60\x77\x00\x3a\x2a\x82\x2e\xbb\x9e\xeb\x4f\x2c\xc9\x64\xa4\x1c\xe6\x94\x54\xb1\xf4\x5b\x19\xe4\xa2\xb2\x83\x0c\x07\x3c\x2d\xba\x21\xc5\xc9\x50\xe8\x9d\x8d\xd4\xae\x3f\xd8\x92\x11\x64\x7f\xdd\x93\x31\x82\xd3\x85\xd3\xb6\xc4\x8c\xc6\xb8\x65\x1d\x66\xdb\xe4\x14\xeb\xa8\x2c\x89\xdf\x0b\x95\x3a\xec\xd0\xe4\xe4\x6c\x24\x23\xb1\x90\xf8\x0e\x3b\x94\x75\x6b\xa3\x90\x76\x95\x69\xa5\x28\xf3\x39\x59\x95\x5a\xcb\x68\x6e\x4f\x7f\xeb\xf5\x9b\x47\x78\x39\xaa\x6c\xfa\x4f\x45\xd3\x9d\x56\xc2\x69\x23\x54\xfe\x08\x13\xdf\xf8\xc1\xeb\x37\x8f\x70\x3a\xb1\xaf\xdf\xb5\x73\x76\x3e\x3f\xc2\x39\xea\x7d\xdf\x0a\xda\xec\xd0\x73\x0c\x9c\xd8\xd1\xaa\x4e\xc5\xd0\x44\x28\x47\x66\x1f\xe8\x02\xe3\x2b\x77\x98\xb9\x20\x4a\xf3\xc1\x72\x4d\xf5\xbb\xee\x84\x8f\x3e\x2c\x16\x85\x31\xdc\xcd\xd0\x26\x48\x09\xdc\x40\x07\x9f\x9b\x51\x5f\x0f\x57\x18\xb2\x85\x96\xfc\xa2\x4e\xde\xfd\x3b\xa3\x77\x91\x16\x75\xf8\x47\xca\x1b\x66\x5d\x7c\xf0\x5b\x21\x36\x2e\xfd\xc2\x05\x91\x83\x4f\x7f\xbd\xbb\x65\x1f\xfe\xf8\x89\xdd\x8e\xb8\x0c\xae\xd3\xb8\x53\xdc\x6d\x68\x88\xa7\xfd\x66\xb5\x71\x17\x6a\x11\x5a\x6d\xd5\xaa\xaf\x50\x5c\xec\x05\xaf\x50\x42\xd2\x75\xad\x4d\x90\xd6\xde\x81\x03\x1e\xc4\x85\x64\xad\xab\x6c\x5b\x33\x2c\x8e\xc8\x6b\x43\xd3\x71\x3e\xe8\x91\x4b\xe2\xc2\x7a\x5c\x33\x3a\x6d\x78\x78\x4a\x5c\x3c\xe2\x81\xfe\x83\xd8\x3d\xcb\x6c\xe1\x33\x31\xa4\x09\xae\x49\x26\x4e\xf8\x05\x9d\xff\x88\x96\x12\x5e\xd5\xf2\x97\x98\xd7\xfa\x97\xc0\x51\x30\x3d\xad\x26\x9f\x89\x9f\x09\xfd\x8f\x69\xd1\x51\x8a\x7c\x4c\xf9\x03\x7e\x4f\xfb\xce\xe9\xc1\xbd\xee\x7f\xeb\x2b\xd8\x66\x05\xed\xf0\x4f\x32\x56\xe8\xf0\x8c\xf9\xbe\x86\xdd\x51\x36\x0f\x03\xb3\x0d\x99\x00\x87\x79\x74\x75\x3b\xda\x95\x12\x9d\x50\x79\xfa\x4c\xea\x5f\x0d\x81\x71\xdd\xfa\xa6\xee\x50\x50\xfa\x79\xfa\xba\xe5\x32\x38\xdd\x60\x30\xf8\xac\x14\xd9\x36\xe8\x75\xf3\xb1\xa1\x8d\xef\xfd\x55\x2b\x3b\x31\xe1\xe0\x3a\x6a\xcd\xf9\x2c\x9a\xbc\x8a\x27\xf3\x5d\x3f\xbe\x8e\xc6\xf3\x78\xf2\x6a\x16\xaf\x44\x1d\xb7\x88\xc6\xf3\xe6\x9d\xf4\xd4\xc6\xe0\xe5\xb3\xbf\xc2\x1e\xfe\xf7\x94\x78\xe3\xd7\xf1\xc6\xf1\x29\x8b\x6f\xe3\x09\xef\xc7\xdf\xf1\xd8\xdf\xd6\x97\x41\xfa\x5e\x74\xb8\x83\xa0\xa9\x5d\xab\x6a\x97\x57\xc2\x37\x9f\x8e\x2a\xfb\x50\xd5\xb2\x00\xfb\x9e\x06\x57\xe7\xab\x7f\x03\x00\x00\xff\xff\x93\x34\xfc\x09\x10\x0b\x00\x00")

func monitoringZyncQueGrafanaDashboard1JsonTplBytes() ([]byte, error) {
	return bindataRead(
		_monitoringZyncQueGrafanaDashboard1JsonTpl,
		"monitoring/zync-que-grafana-dashboard-1.json.tpl",
	)
}

func monitoringZyncQueGrafanaDashboard1JsonTpl() (*asset, error) {
	bytes, err := monitoringZyncQueGrafanaDashboard1JsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring/zync-que-grafana-dashboard-1.json.tpl", size: 2832, mode: os.FileMode(420), modTime: time.Unix(1585752756, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"monitoring/Sidekiq-grafana-dashboard-1.json.tpl":  monitoringSidekiqGrafanaDashboard1JsonTpl,
	"monitoring/apicast-grafana-dashboard-1.json.tpl":  monitoringApicastGrafanaDashboard1JsonTpl,
	"monitoring/backend-grafana-dashboard-1.json.tpl":  monitoringBackendGrafanaDashboard1JsonTpl,
	"monitoring/zync-grafana-dashboard-1.json.tpl":     monitoringZyncGrafanaDashboard1JsonTpl,
	"monitoring/zync-que-grafana-dashboard-1.json.tpl": monitoringZyncQueGrafanaDashboard1JsonTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"monitoring": &bintree{nil, map[string]*bintree{
		"Sidekiq-grafana-dashboard-1.json.tpl":  &bintree{monitoringSidekiqGrafanaDashboard1JsonTpl, map[string]*bintree{}},
		"apicast-grafana-dashboard-1.json.tpl":  &bintree{monitoringApicastGrafanaDashboard1JsonTpl, map[string]*bintree{}},
		"backend-grafana-dashboard-1.json.tpl":  &bintree{monitoringBackendGrafanaDashboard1JsonTpl, map[string]*bintree{}},
		"zync-grafana-dashboard-1.json.tpl":     &bintree{monitoringZyncGrafanaDashboard1JsonTpl, map[string]*bintree{}},
		"zync-que-grafana-dashboard-1.json.tpl": &bintree{monitoringZyncQueGrafanaDashboard1JsonTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
