apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    app: 3scale-api-management
  name: policies.capabilities.3scale.net
spec:
  additionalPrinterColumns:
  - JSONPath: .status.providerAccountHost
    name: Provider Account
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: Ready
    type: string
  - JSONPath: .status.policyID
    name: 3scale ID
    type: integer
  group: capabilities.3scale.net
  names:
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Policy is the Schema for the policies API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PolicySpec defines the desired state of Policy
          properties:
            name:
              description: Name is the name of the policy
              type: string
            providerAccountRef:
              description: ProviderAccountRef references account provider credentials
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            schema:
              description: Schema is the schema of the policy
              properties:
                $schema:
                  description: Schema the $schema keyword is used to declare that this is a JSON Schema.
                  type: string
                configuration:
                  description: Configuration defines the structural schema for the policy
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                description:
                  description: Description is an array of description messages for the policy schema
                  items:
                    type: string
                  type: array
                name:
                  description: Name is the name of the policy schema
                  type: string
                summary:
                  description: Summary is the summary of the policy schema
                  type: string
                version:
                  description: Version is the version of the policy schema
                  type: string
              required:
              - $schema
              - configuration
              - name
              - summary
              - version
              type: object
            version:
              description: Version is the version of the policy
              type: string
          required:
          - name
          - schema
          - version
          type: object
        status:
          description: PolicyStatus defines the observed state of Policy
          properties:
            conditions:
              description: Current state of the policy resource. Conditions represent the latest available observations of an object's state
              items:
                description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            observedGeneration:
              description: ObservedGeneration reflects the generation of the most recently observed Backend Spec.
              format: int64
              type: integer
            policyID:
              format: int64
              type: integer
            providerAccountHost:
              description: ProviderAccountHost contains the 3scale account's provider URL
              type: string
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
