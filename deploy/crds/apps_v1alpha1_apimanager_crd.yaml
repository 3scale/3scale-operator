apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: apimanagers.apps.3scale.net
spec:
  group: apps.3scale.net
  names:
    kind: APIManager
    listKind: APIManagerList
    plural: apimanagers
    singular: apimanager
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            apicast:
              properties:
                image:
                  type: string
                managementAPI:
                  type: string
                openSSLVerify:
                  type: boolean
                registryURL:
                  type: string
                responseCodes:
                  type: boolean
              type: object
            appLabel:
              type: string
            backend:
              properties:
                image:
                  type: string
                redisImage:
                  type: string
              type: object
            highAvailability:
              properties:
                enabled:
                  type: boolean
              type: object
            imageStreamTagImportInsecure:
              type: boolean
            productVersion:
              type: string
            resourceRequirementsEnabled:
              type: boolean
            system:
              properties:
                database:
                  description: TODO should union fields be optional?
                  properties:
                    mysql:
                      description: Union type. Only one of the fields can be set
                      properties:
                        image:
                          type: string
                      type: object
                  type: object
                fileStorage:
                  description: TODO should this field be optional? We have different
                    approaches in Kubernetes. For example, in v1.Volume it is optional
                    and there's an implied behaviour on which one is the default VolumeSource
                    of the ones available. However, on v1.Probe the Handler field
                    is mandatory and says that one of the available values and only
                    one should be specified (it mandates to write something)
                  properties:
                    amazonSimpleStorageService:
                      properties:
                        awsBucket:
                          type: string
                        awsCredentialsSecret:
                          type: object
                        awsRegion:
                          type: string
                        fileUploadStorage:
                          type: string
                      required:
                      - awsBucket
                      - awsRegion
                      - awsCredentialsSecret
                      - fileUploadStorage
                      type: object
                    persistentVolumeClaim:
                      description: Union type. Only one of the fields can be set.
                      properties:
                        storageClassName:
                          type: string
                      type: object
                  type: object
                image:
                  type: string
                memcachedImage:
                  type: string
                redisImage:
                  type: string
              type: object
            tenantName:
              type: string
            wildcardDomain:
              type: string
            wildcardPolicy:
              type: string
            wildcardRouter:
              properties:
                image:
                  type: string
              type: object
            zync:
              properties:
                image:
                  type: string
                postgreSQLImage:
                  type: string
              type: object
          required:
          - productVersion
          - wildcardDomain
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
