apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: backends.capabilities.3scale.net
spec:
  group: capabilities.3scale.net
  names:
    kind: Backend
    listKind: BackendList
    plural: backends
    singular: backend
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Backend is the Schema for the backends API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: BackendSpec defines the desired state of Backend
          properties:
            description:
              type: string
            friendlyName:
              type: string
            privateBaseURL:
              pattern: ^https?:\/\/.*$
              type: string
          type: object
        status:
          description: BackendStatus defines the observed state of Backend
          properties:
            backendId:
              format: int64
              type: integer
            createdAt:
              type: string
            errorMessage:
              type: string
            errorReason:
              description: "In the event that there is a terminal problem reconciling
                the replicas, both ErrorReason and ErrorMessage will be set. ErrorReason
                will be populated with a succinct value suitable for machine interpretation,
                while ErrorMessage will contain a more verbose string suitable for
                logging and human consumption. \n These fields should not be set for
                transitive errors that a controller faces that are expected to be
                fixed automatically over time (like service outages), but instead
                indicate that something is fundamentally wrong with the Backend's
                spec or the configuration of the backend controller, and that manual
                intervention is required. Examples of terminal errors would be invalid
                combinations of settings in the spec, values that are unsupported
                by the backend controller, or the responsible backend controller itself
                being critically misconfigured. \n Any transient errors that occur
                during the reconciliation of Backends can be added as events to the
                Backend's object and/or logged in the controller's output."
              type: string
            state:
              type: string
            systemName:
              type: string
            updatedAt:
              type: string
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
